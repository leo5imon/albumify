export async function playlistAlbum (session, filteredAlbum, artistName) {
    // const valTracksAlbum = valTracks.filter(item => filteredValues.some(value => item[0].includes(value)));
    const playlistArtist = filteredAlbum.filter(item => item[0] === artistName);

    function shuffle(a) {
      for (let i = a.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [a[i], a[j]] = [a[j], a[i]];
      }
      return a;
    }

    shuffle(playlistArtist);

    const createPlaylist = await fetch('https://api.spotify.com/v1/users/' + session.user.sub + '/playlists', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${session.user.accessToken}`,
      },
      body: JSON.stringify({
        "name": artistName + "'s album by Albumify",
        "description": "Playlist generated by Albumify",
        "public": false
      })
    }).then(createPlaylist => createPlaylist.json());

    const uriAlbum = playlistArtist.map(item => item[1]);

    const updatePlaylist = fetch('https://api.spotify.com/v1/playlists/' + createPlaylist.id + '/tracks', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${session.user.accessToken}`,
      },
      body: JSON.stringify({
        "uris": uriAlbum,
        "position": 0
      })
    }).then(updatePlaylist => updatePlaylist.json())
};